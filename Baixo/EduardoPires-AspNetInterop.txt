EduardoPires - AspNetInterop

Requisição 
http://api.github.com/repos/EduardoPires/AspNetInterop/contents/src/AspNetInterop.UI.Core/Controllers/CustomersController.cs

{
    "name": "CustomersController.cs",
    "path": "src/AspNetInterop.UI.Core/Controllers/CustomersController.cs",
    "sha": "9bba349a3a8b2a94e28db8fba870a1e6b48b0c86",
    "size": 4268,
    "url": "https://api.github.com/repos/EduardoPires/AspNetInterop/contents/src/AspNetInterop.UI.Core/Controllers/CustomersController.cs?ref=master",
    "html_url": "https://github.com/EduardoPires/AspNetInterop/blob/master/src/AspNetInterop.UI.Core/Controllers/CustomersController.cs",
    "git_url": "https://api.github.com/repos/EduardoPires/AspNetInterop/git/blobs/9bba349a3a8b2a94e28db8fba870a1e6b48b0c86",
    "download_url": "https://raw.githubusercontent.com/EduardoPires/AspNetInterop/master/src/AspNetInterop.UI.Core/Controllers/CustomersController.cs",
    "type": "file",
    "content": "dXNpbmcgU3lzdGVtOwp1c2luZyBTeXN0ZW0uTGlucTsKdXNpbmcgU3lzdGVt\nLlRocmVhZGluZy5UYXNrczsKdXNpbmcgQXNwTmV0SW50ZXJvcC5VSS5Db3Jl\nLkRhdGE7CnVzaW5nIE1pY3Jvc29mdC5Bc3BOZXRDb3JlLk12YzsKdXNpbmcg\nTWljcm9zb2Z0LkVudGl0eUZyYW1ld29ya0NvcmU7CnVzaW5nIEFzcE5ldElu\ndGVyb3AuVUkuQ29yZS5Nb2RlbHMuQ3VzdG9tZXJzOwp1c2luZyBNaWNyb3Nv\nZnQuQXNwTmV0Q29yZS5BdXRob3JpemF0aW9uOwoKbmFtZXNwYWNlIEFzcE5l\ndEludGVyb3AuVUkuQ29yZS5Db250cm9sbGVycwp7CiAgICBbQXV0aG9yaXpl\nXQogICAgcHVibGljIGNsYXNzIEN1c3RvbWVyc0NvbnRyb2xsZXIgOiBDb250\ncm9sbGVyCiAgICB7CiAgICAgICAgcHJpdmF0ZSByZWFkb25seSBBcHBsaWNh\ndGlvbkRiQ29udGV4dCBfY29udGV4dDsKCiAgICAgICAgcHVibGljIEN1c3Rv\nbWVyc0NvbnRyb2xsZXIoQXBwbGljYXRpb25EYkNvbnRleHQgY29udGV4dCkK\nICAgICAgICB7CiAgICAgICAgICAgIF9jb250ZXh0ID0gY29udGV4dDsgICAg\nCiAgICAgICAgfQoKICAgICAgICBbQXV0aG9yaXplKFBvbGljeSA9ICJDYW5B\nY2Nlc3NDdXN0b21lckRhdGEiKV0KICAgICAgICBwdWJsaWMgYXN5bmMgVGFz\nazxJQWN0aW9uUmVzdWx0PiBJbmRleCgpCiAgICAgICAgewogICAgICAgICAg\nICByZXR1cm4gVmlldyhhd2FpdCBfY29udGV4dC5DdXN0b21lcnMuVG9MaXN0\nQXN5bmMoKSk7CiAgICAgICAgfQoKICAgICAgICBbQXV0aG9yaXplKFBvbGlj\neSA9ICJDYW5BY2Nlc3NDdXN0b21lckRhdGEiKV0KICAgICAgICBwdWJsaWMg\nYXN5bmMgVGFzazxJQWN0aW9uUmVzdWx0PiBEZXRhaWxzKEd1aWQ/IGlkKQog\nICAgICAgIHsKICAgICAgICAgICAgaWYgKGlkID09IG51bGwpCiAgICAgICAg\nICAgIHsKICAgICAgICAgICAgICAgIHJldHVybiBOb3RGb3VuZCgpOwogICAg\nICAgICAgICB9CgogICAgICAgICAgICB2YXIgY3VzdG9tZXIgPSBhd2FpdCBf\nY29udGV4dC5DdXN0b21lcnMuU2luZ2xlT3JEZWZhdWx0QXN5bmMobSA9PiBt\nLklkID09IGlkKTsKICAgICAgICAgICAgaWYgKGN1c3RvbWVyID09IG51bGwp\nCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHJldHVybiBOb3RGb3Vu\nZCgpOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gVmlldyhj\ndXN0b21lcik7CiAgICAgICAgfQoKICAgICAgICBbQXV0aG9yaXplKFBvbGlj\neSA9ICJDYW5Xcml0ZUN1c3RvbWVyRGF0YSIpXQogICAgICAgIHB1YmxpYyBJ\nQWN0aW9uUmVzdWx0IENyZWF0ZSgpCiAgICAgICAgewogICAgICAgICAgICBy\nZXR1cm4gVmlldygpOwogICAgICAgIH0KCiAgICAgICAgW0F1dGhvcml6ZShQ\nb2xpY3kgPSAiQ2FuV3JpdGVDdXN0b21lckRhdGEiKV0KICAgICAgICBbSHR0\ncFBvc3RdCiAgICAgICAgW1ZhbGlkYXRlQW50aUZvcmdlcnlUb2tlbl0KICAg\nICAgICBwdWJsaWMgYXN5bmMgVGFzazxJQWN0aW9uUmVzdWx0PiBDcmVhdGUo\nW0JpbmQoIklkLEFnZSxOYW1lIildIEN1c3RvbWVyIGN1c3RvbWVyKQogICAg\nICAgIHsKICAgICAgICAgICAgaWYgKE1vZGVsU3RhdGUuSXNWYWxpZCkKICAg\nICAgICAgICAgewogICAgICAgICAgICAgICAgY3VzdG9tZXIuSWQgPSBHdWlk\nLk5ld0d1aWQoKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LkFkZChjdXN0\nb21lcik7CiAgICAgICAgICAgICAgICBhd2FpdCBfY29udGV4dC5TYXZlQ2hh\nbmdlc0FzeW5jKCk7CiAgICAgICAgICAgICAgICByZXR1cm4gUmVkaXJlY3RU\nb0FjdGlvbigiSW5kZXgiKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBy\nZXR1cm4gVmlldyhjdXN0b21lcik7CiAgICAgICAgfQoKICAgICAgICBbQXV0\naG9yaXplKFBvbGljeSA9ICJDYW5Xcml0ZUN1c3RvbWVyRGF0YSIpXQogICAg\nICAgIHB1YmxpYyBhc3luYyBUYXNrPElBY3Rpb25SZXN1bHQ+IEVkaXQoR3Vp\nZD8gaWQpCiAgICAgICAgewogICAgICAgICAgICBpZiAoaWQgPT0gbnVsbCkK\nICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcmV0dXJuIE5vdEZvdW5k\nKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZhciBjdXN0b21lciA9\nIGF3YWl0IF9jb250ZXh0LkN1c3RvbWVycy5TaW5nbGVPckRlZmF1bHRBc3lu\nYyhtID0+IG0uSWQgPT0gaWQpOwogICAgICAgICAgICBpZiAoY3VzdG9tZXIg\nPT0gbnVsbCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcmV0dXJu\nIE5vdEZvdW5kKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJu\nIFZpZXcoY3VzdG9tZXIpOwogICAgICAgIH0KCiAgICAgICAgW0F1dGhvcml6\nZShQb2xpY3kgPSAiQ2FuV3JpdGVDdXN0b21lckRhdGEiKV0KICAgICAgICBb\nSHR0cFBvc3RdCiAgICAgICAgW1ZhbGlkYXRlQW50aUZvcmdlcnlUb2tlbl0K\nICAgICAgICBwdWJsaWMgYXN5bmMgVGFzazxJQWN0aW9uUmVzdWx0PiBFZGl0\nKEd1aWQgaWQsIFtCaW5kKCJJZCxBZ2UsTmFtZSIpXSBDdXN0b21lciBjdXN0\nb21lcikKICAgICAgICB7CiAgICAgICAgICAgIGlmIChpZCAhPSBjdXN0b21l\nci5JZCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcmV0dXJuIE5v\ndEZvdW5kKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChNb2Rl\nbFN0YXRlLklzVmFsaWQpCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAg\nIHRyeQogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIF9j\nb250ZXh0LlVwZGF0ZShjdXN0b21lcik7CiAgICAgICAgICAgICAgICAgICAg\nYXdhaXQgX2NvbnRleHQuU2F2ZUNoYW5nZXNBc3luYygpOwogICAgICAgICAg\nICAgICAgfQogICAgICAgICAgICAgICAgY2F0Y2ggKERiVXBkYXRlQ29uY3Vy\ncmVuY3lFeGNlcHRpb24pCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAg\nICAgICAgICAgaWYgKCFDdXN0b21lckV4aXN0cyhjdXN0b21lci5JZCkpCiAg\nICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBy\nZXR1cm4gTm90Rm91bmQoKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAg\nICAgICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgICAgIHsKICAg\nICAgICAgICAgICAgICAgICAgICAgdGhyb3c7CiAgICAgICAgICAgICAgICAg\nICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmV0dXJu\nIFJlZGlyZWN0VG9BY3Rpb24oIkluZGV4Iik7CiAgICAgICAgICAgIH0KICAg\nICAgICAgICAgcmV0dXJuIFZpZXcoY3VzdG9tZXIpOwogICAgICAgIH0KCiAg\nICAgICAgW0F1dGhvcml6ZShQb2xpY3kgPSAiQ2FuV3JpdGVDdXN0b21lckRh\ndGEiKV0KICAgICAgICBwdWJsaWMgYXN5bmMgVGFzazxJQWN0aW9uUmVzdWx0\nPiBEZWxldGUoR3VpZD8gaWQpCiAgICAgICAgewogICAgICAgICAgICBpZiAo\naWQgPT0gbnVsbCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgcmV0\ndXJuIE5vdEZvdW5kKCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZh\nciBjdXN0b21lciA9IGF3YWl0IF9jb250ZXh0LkN1c3RvbWVycy5TaW5nbGVP\nckRlZmF1bHRBc3luYyhtID0+IG0uSWQgPT0gaWQpOwogICAgICAgICAgICBp\nZiAoY3VzdG9tZXIgPT0gbnVsbCkKICAgICAgICAgICAgewogICAgICAgICAg\nICAgICAgcmV0dXJuIE5vdEZvdW5kKCk7CiAgICAgICAgICAgIH0KCiAgICAg\nICAgICAgIHJldHVybiBWaWV3KGN1c3RvbWVyKTsKICAgICAgICB9CgogICAg\nICAgIFtBdXRob3JpemUoUG9saWN5ID0gIkNhbldyaXRlQ3VzdG9tZXJEYXRh\nIildCiAgICAgICAgW0h0dHBQb3N0LCBBY3Rpb25OYW1lKCJEZWxldGUiKV0K\nICAgICAgICBbVmFsaWRhdGVBbnRpRm9yZ2VyeVRva2VuXQogICAgICAgIHB1\nYmxpYyBhc3luYyBUYXNrPElBY3Rpb25SZXN1bHQ+IERlbGV0ZUNvbmZpcm1l\nZChHdWlkIGlkKQogICAgICAgIHsKICAgICAgICAgICAgdmFyIGN1c3RvbWVy\nID0gYXdhaXQgX2NvbnRleHQuQ3VzdG9tZXJzLlNpbmdsZU9yRGVmYXVsdEFz\neW5jKG0gPT4gbS5JZCA9PSBpZCk7CiAgICAgICAgICAgIF9jb250ZXh0LkN1\nc3RvbWVycy5SZW1vdmUoY3VzdG9tZXIpOwogICAgICAgICAgICBhd2FpdCBf\nY29udGV4dC5TYXZlQ2hhbmdlc0FzeW5jKCk7CiAgICAgICAgICAgIHJldHVy\nbiBSZWRpcmVjdFRvQWN0aW9uKCJJbmRleCIpOwogICAgICAgIH0KCiAgICAg\nICAgcHJpdmF0ZSBib29sIEN1c3RvbWVyRXhpc3RzKEd1aWQgaWQpCiAgICAg\nICAgewogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuQ3VzdG9tZXJzLkFu\neShlID0+IGUuSWQgPT0gaWQpOwogICAgICAgIH0KICAgIH0KfQo=\n",
    "encoding": "base64",
    "_links": {
        "self": "https://api.github.com/repos/EduardoPires/AspNetInterop/contents/src/AspNetInterop.UI.Core/Controllers/CustomersController.cs?ref=master",
        "git": "https://api.github.com/repos/EduardoPires/AspNetInterop/git/blobs/9bba349a3a8b2a94e28db8fba870a1e6b48b0c86",
        "html": "https://github.com/EduardoPires/AspNetInterop/blob/master/src/AspNetInterop.UI.Core/Controllers/CustomersController.cs"
    }
}

Requisição Download
https://raw.githubusercontent.com/EduardoPires/AspNetInterop/master/src/AspNetInterop.UI.Core/Controllers/CustomersController.cs

using System;
using System.Linq;
using System.Threading.Tasks;
using AspNetInterop.UI.Core.Data;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using AspNetInterop.UI.Core.Models.Customers;
using Microsoft.AspNetCore.Authorization;

namespace AspNetInterop.UI.Core.Controllers
{
    [Authorize]
    public class CustomersController : Controller
    {
        private readonly ApplicationDbContext _context;

        public CustomersController(ApplicationDbContext context)
        {
            _context = context;    
        }

        [Authorize(Policy = "CanAccessCustomerData")]
        public async Task<IActionResult> Index()
        {
            return View(await _context.Customers.ToListAsync());
        }

        [Authorize(Policy = "CanAccessCustomerData")]
        public async Task<IActionResult> Details(Guid? id)
        {
            if (id == null)
            {
                return NotFound();
            }

            var customer = await _context.Customers.SingleOrDefaultAsync(m => m.Id == id);
            if (customer == null)
            {
                return NotFound();
            }

            return View(customer);
        }

        [Authorize(Policy = "CanWriteCustomerData")]
        public IActionResult Create()
        {
            return View();
        }

        [Authorize(Policy = "CanWriteCustomerData")]
        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Create([Bind("Id,Age,Name")] Customer customer)
        {
            if (ModelState.IsValid)
            {
                customer.Id = Guid.NewGuid();
                _context.Add(customer);
                await _context.SaveChangesAsync();
                return RedirectToAction("Index");
            }
            return View(customer);
        }

        [Authorize(Policy = "CanWriteCustomerData")]
        public async Task<IActionResult> Edit(Guid? id)
        {
            if (id == null)
            {
                return NotFound();
            }

            var customer = await _context.Customers.SingleOrDefaultAsync(m => m.Id == id);
            if (customer == null)
            {
                return NotFound();
            }
            return View(customer);
        }

        [Authorize(Policy = "CanWriteCustomerData")]
        [HttpPost]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> Edit(Guid id, [Bind("Id,Age,Name")] Customer customer)
        {
            if (id != customer.Id)
            {
                return NotFound();
            }

            if (ModelState.IsValid)
            {
                try
                {
                    _context.Update(customer);
                    await _context.SaveChangesAsync();
                }
                catch (DbUpdateConcurrencyException)
                {
                    if (!CustomerExists(customer.Id))
                    {
                        return NotFound();
                    }
                    else
                    {
                        throw;
                    }
                }
                return RedirectToAction("Index");
            }
            return View(customer);
        }

        [Authorize(Policy = "CanWriteCustomerData")]
        public async Task<IActionResult> Delete(Guid? id)
        {
            if (id == null)
            {
                return NotFound();
            }

            var customer = await _context.Customers.SingleOrDefaultAsync(m => m.Id == id);
            if (customer == null)
            {
                return NotFound();
            }

            return View(customer);
        }

        [Authorize(Policy = "CanWriteCustomerData")]
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public async Task<IActionResult> DeleteConfirmed(Guid id)
        {
            var customer = await _context.Customers.SingleOrDefaultAsync(m => m.Id == id);
            _context.Customers.Remove(customer);
            await _context.SaveChangesAsync();
            return RedirectToAction("Index");
        }

        private bool CustomerExists(Guid id)
        {
            return _context.Customers.Any(e => e.Id == id);
        }
    }
}

