ValveSoftware / steamvr_unity_plugin

Requisição 
http://api.github.com/repos/ValveSoftware/steamvr_unity_plugin/contents/Assets/SteamVR/Scripts/SteamVR_Camera.cs

{
    "name": "SteamVR_Camera.cs",
    "path": "Assets/SteamVR/Scripts/SteamVR_Camera.cs",
    "sha": "5f14741d8a2fc91ac2fb214a0deb9bdb55887fa1",
    "size": 6819,
    "url": "https://api.github.com/repos/ValveSoftware/steamvr_unity_plugin/contents/Assets/SteamVR/Scripts/SteamVR_Camera.cs?ref=master",
    "html_url": "https://github.com/ValveSoftware/steamvr_unity_plugin/blob/master/Assets/SteamVR/Scripts/SteamVR_Camera.cs",
    "git_url": "https://api.github.com/repos/ValveSoftware/steamvr_unity_plugin/git/blobs/5f14741d8a2fc91ac2fb214a0deb9bdb55887fa1",
    "download_url": "https://raw.githubusercontent.com/ValveSoftware/steamvr_unity_plugin/master/Assets/SteamVR/Scripts/SteamVR_Camera.cs",
    "type": "file",
    "content": "77u/Ly89PT09PT09IENvcHlyaWdodCAoYykgVmFsdmUgQ29ycG9yYXRpb24s\nIEFsbCByaWdodHMgcmVzZXJ2ZWQuID09PT09PT09PT09PT09PQovLwovLyBQ\ndXJwb3NlOiBBZGRzIFN0ZWFtVlIgcmVuZGVyIHN1cHBvcnQgdG8gZXhpc3Rp\nbmcgY2FtZXJhIG9iamVjdHMKLy8KLy89PT09PT09PT09PT09PT09PT09PT09\nPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09\nPT09PT09PT09PQoKdXNpbmcgVW5pdHlFbmdpbmU7CnVzaW5nIFN5c3RlbS5D\nb2xsZWN0aW9uczsKdXNpbmcgU3lzdGVtLlJlZmxlY3Rpb247CnVzaW5nIFZh\nbHZlLlZSOwoKW1JlcXVpcmVDb21wb25lbnQodHlwZW9mKENhbWVyYSkpXQpw\ndWJsaWMgY2xhc3MgU3RlYW1WUl9DYW1lcmEgOiBNb25vQmVoYXZpb3VyCnsK\nCVtTZXJpYWxpemVGaWVsZF0KCXByaXZhdGUgVHJhbnNmb3JtIF9oZWFkOwoJ\ncHVibGljIFRyYW5zZm9ybSBoZWFkIHsgZ2V0IHsgcmV0dXJuIF9oZWFkOyB9\nIH0KCXB1YmxpYyBUcmFuc2Zvcm0gb2Zmc2V0IHsgZ2V0IHsgcmV0dXJuIF9o\nZWFkOyB9IH0gLy8gbGVnYWN5CglwdWJsaWMgVHJhbnNmb3JtIG9yaWdpbiB7\nIGdldCB7IHJldHVybiBfaGVhZC5wYXJlbnQ7IH0gfQoKCXB1YmxpYyBuZXcg\nQ2FtZXJhIGNhbWVyYSB7IGdldDsgcHJpdmF0ZSBzZXQ7IH0KCglbU2VyaWFs\naXplRmllbGRdCglwcml2YXRlIFRyYW5zZm9ybSBfZWFyczsKCXB1YmxpYyBU\ncmFuc2Zvcm0gZWFycyB7IGdldCB7IHJldHVybiBfZWFyczsgfSB9CgoJcHVi\nbGljIFJheSBHZXRSYXkoKQoJewoJCXJldHVybiBuZXcgUmF5KF9oZWFkLnBv\nc2l0aW9uLCBfaGVhZC5mb3J3YXJkKTsKCX0KCglwdWJsaWMgYm9vbCB3aXJl\nZnJhbWUgPSBmYWxzZTsKCglzdGF0aWMgcHVibGljIGZsb2F0IHNjZW5lUmVz\nb2x1dGlvblNjYWxlCgl7CgkJZ2V0IHsgcmV0dXJuIFVuaXR5RW5naW5lLlZS\nLlZSU2V0dGluZ3MucmVuZGVyU2NhbGU7IH0KCQlzZXQgeyBVbml0eUVuZ2lu\nZS5WUi5WUlNldHRpbmdzLnJlbmRlclNjYWxlID0gdmFsdWU7IH0KCX0KCgkj\ncmVnaW9uIEVuYWJsZSAvIERpc2FibGUKCgl2b2lkIE9uRGlzYWJsZSgpCgl7\nCgkJU3RlYW1WUl9SZW5kZXIuUmVtb3ZlKHRoaXMpOwoJfQoKCXZvaWQgT25F\nbmFibGUoKQoJewoJCS8vIEJhaWwgaWYgbm8gaG1kIGlzIGNvbm5lY3RlZAoJ\nCXZhciB2ciA9IFN0ZWFtVlIuaW5zdGFuY2U7CgkJaWYgKHZyID09IG51bGwp\nCgkJewoJCQlpZiAoaGVhZCAhPSBudWxsKQoJCQl7CgkJCQloZWFkLkdldENv\nbXBvbmVudDxTdGVhbVZSX1RyYWNrZWRPYmplY3Q+KCkuZW5hYmxlZCA9IGZh\nbHNlOwoJCQl9CgoJCQllbmFibGVkID0gZmFsc2U7CgkJCXJldHVybjsKCQl9\nCgoJCS8vIENvbnZlcnQgY2FtZXJhIHJpZyBmb3IgbmF0aXZlIE9wZW5WUiBp\nbnRlZ3JhdGlvbi4KCQl2YXIgdCA9IHRyYW5zZm9ybTsKCQlpZiAoaGVhZCAh\nPSB0KQoJCXsKCQkJRXhwYW5kKCk7CgoJCQl0LnBhcmVudCA9IG9yaWdpbjsK\nCgkJCXdoaWxlIChoZWFkLmNoaWxkQ291bnQgPiAwKQoJCQkJaGVhZC5HZXRD\naGlsZCgwKS5wYXJlbnQgPSB0OwoKCQkJLy8gS2VlcCB0aGUgaGVhZCBhcm91\nbmQsIGJ1dCBwYXJlbnQgdG8gdGhlIGNhbWVyYSBub3cgc2luY2UgaXQgbW92\nZXMgd2l0aCB0aGUgaG1kCgkJCS8vIGJ1dCBleGlzdGluZyBjb250ZW50IG1h\neSBzdGlsbCBoYXZlIHJlZmVyZW5jZXMgdG8gdGhpcyBvYmplY3QuCgkJCWhl\nYWQucGFyZW50ID0gdDsKCQkJaGVhZC5sb2NhbFBvc2l0aW9uID0gVmVjdG9y\nMy56ZXJvOwoJCQloZWFkLmxvY2FsUm90YXRpb24gPSBRdWF0ZXJuaW9uLmlk\nZW50aXR5OwoJCQloZWFkLmxvY2FsU2NhbGUgPSBWZWN0b3IzLm9uZTsKCQkJ\naGVhZC5nYW1lT2JqZWN0LlNldEFjdGl2ZShmYWxzZSk7CgoJCQlfaGVhZCA9\nIHQ7CgkJfQoKCQlpZiAoZWFycyA9PSBudWxsKQoJCXsKCQkJdmFyIGUgPSB0\ncmFuc2Zvcm0uR2V0Q29tcG9uZW50SW5DaGlsZHJlbjxTdGVhbVZSX0VhcnM+\nKCk7CgkJCWlmIChlICE9IG51bGwpCgkJCQlfZWFycyA9IGUudHJhbnNmb3Jt\nOwogICAgICAgIH0KCgkJaWYgKGVhcnMgIT0gbnVsbCkKCQkJZWFycy5HZXRD\nb21wb25lbnQ8U3RlYW1WUl9FYXJzPigpLnZyY2FtID0gdGhpczsKCgkJU3Rl\nYW1WUl9SZW5kZXIuQWRkKHRoaXMpOwoJfQoKCSNlbmRyZWdpb24KCgkjcmVn\naW9uIEZ1bmN0aW9uYWxpdHkgdG8gZW5zdXJlIFN0ZWFtVlJfQ2FtZXJhIGNv\nbXBvbmVudCBpcyBhbHdheXMgdGhlIGxhc3QgY29tcG9uZW50IG9uIGFuIG9i\namVjdAoKCXZvaWQgQXdha2UoKQoJewoJCWNhbWVyYSA9IEdldENvbXBvbmVu\ndDxDYW1lcmE+KCk7IC8vIGNhY2hlZCB0byBhdm9pZCBydW50aW1lIGxvb2t1\ncAoJCUZvcmNlTGFzdCgpOwogICAgfQoKCXN0YXRpYyBIYXNodGFibGUgdmFs\ndWVzOwoKCXB1YmxpYyB2b2lkIEZvcmNlTGFzdCgpCgl7CgkJaWYgKHZhbHVl\ncyAhPSBudWxsKQoJCXsKCQkJLy8gUmVzdG9yZSB2YWx1ZXMgb24gbmV3IGlu\nc3RhbmNlCgkJCWZvcmVhY2ggKERpY3Rpb25hcnlFbnRyeSBlbnRyeSBpbiB2\nYWx1ZXMpCgkJCXsKCQkJCXZhciBmID0gZW50cnkuS2V5IGFzIEZpZWxkSW5m\nbzsKCQkJCWYuU2V0VmFsdWUodGhpcywgZW50cnkuVmFsdWUpOwoJCQl9CgkJ\nCXZhbHVlcyA9IG51bGw7CgkJfQoJCWVsc2UKCQl7CgkJCS8vIE1ha2Ugc3Vy\nZSBpdCdzIHRoZSBsYXN0IGNvbXBvbmVudAoJCQl2YXIgY29tcG9uZW50cyA9\nIEdldENvbXBvbmVudHM8Q29tcG9uZW50PigpOwoKCQkJLy8gQnV0IGZpcnN0\nIG1ha2Ugc3VyZSB0aGVyZSBhcmVuJ3QgYW55IG90aGVyIFN0ZWFtVlJfQ2Ft\nZXJhcyBvbiB0aGlzIG9iamVjdC4KCQkJZm9yIChpbnQgaSA9IDA7IGkgPCBj\nb21wb25lbnRzLkxlbmd0aDsgaSsrKQoJCQl7CgkJCQl2YXIgYyA9IGNvbXBv\nbmVudHNbaV0gYXMgU3RlYW1WUl9DYW1lcmE7CgkJCQlpZiAoYyAhPSBudWxs\nICYmIGMgIT0gdGhpcykKCQkJCXsKCQkJCQlEZXN0cm95SW1tZWRpYXRlKGMp\nOwoJCQkJfQoJCQl9CgoJCQljb21wb25lbnRzID0gR2V0Q29tcG9uZW50czxD\nb21wb25lbnQ+KCk7CgoJCQlpZiAodGhpcyAhPSBjb21wb25lbnRzW2NvbXBv\nbmVudHMuTGVuZ3RoIC0gMV0pCgkJCXsKCQkJCS8vIFN0b3JlIG9mZiB2YWx1\nZXMgdG8gYmUgcmVzdG9yZWQgb24gbmV3IGluc3RhbmNlCgkJCQl2YWx1ZXMg\nPSBuZXcgSGFzaHRhYmxlKCk7CgkJCQl2YXIgZmllbGRzID0gR2V0VHlwZSgp\nLkdldEZpZWxkcyhCaW5kaW5nRmxhZ3MuSW5zdGFuY2UgfCBCaW5kaW5nRmxh\nZ3MuTm9uUHVibGljIHwgQmluZGluZ0ZsYWdzLlB1YmxpYyk7CgkJCQlmb3Jl\nYWNoICh2YXIgZiBpbiBmaWVsZHMpCgkJCQkJaWYgKGYuSXNQdWJsaWMgfHwg\nZi5Jc0RlZmluZWQodHlwZW9mKFNlcmlhbGl6ZUZpZWxkKSwgdHJ1ZSkpCgkJ\nCQkJCXZhbHVlc1tmXSA9IGYuR2V0VmFsdWUodGhpcyk7CgoJCQkJdmFyIGdv\nID0gZ2FtZU9iamVjdDsKCQkJCURlc3Ryb3lJbW1lZGlhdGUodGhpcyk7CgkJ\nCQlnby5BZGRDb21wb25lbnQ8U3RlYW1WUl9DYW1lcmE+KCkuRm9yY2VMYXN0\nKCk7CgkJCX0KCQl9Cgl9CgoJI2VuZHJlZ2lvbgoKCSNyZWdpb24gRXhwYW5k\nIC8gQ29sbGFwc2Ugb2JqZWN0IGhpZXJhcmNoeQoKI2lmIFVOSVRZX0VESVRP\nUgoJcHVibGljIGJvb2wgaXNFeHBhbmRlZCB7IGdldCB7IHJldHVybiBoZWFk\nICE9IG51bGwgJiYgdHJhbnNmb3JtLnBhcmVudCA9PSBoZWFkOyB9IH0KI2Vu\nZGlmCgljb25zdCBzdHJpbmcgZXllU3VmZml4ID0gIiAoZXllKSI7Cgljb25z\ndCBzdHJpbmcgZWFyc1N1ZmZpeCA9ICIgKGVhcnMpIjsKCWNvbnN0IHN0cmlu\nZyBoZWFkU3VmZml4ID0gIiAoaGVhZCkiOwoJY29uc3Qgc3RyaW5nIG9yaWdp\nblN1ZmZpeCA9ICIgKG9yaWdpbikiOwoJcHVibGljIHN0cmluZyBiYXNlTmFt\nZSB7IGdldCB7IHJldHVybiBuYW1lLkVuZHNXaXRoKGV5ZVN1ZmZpeCkgPyBu\nYW1lLlN1YnN0cmluZygwLCBuYW1lLkxlbmd0aCAtIGV5ZVN1ZmZpeC5MZW5n\ndGgpIDogbmFtZTsgfSB9CgoJLy8gT2JqZWN0IGhpZXJhcmNoeSBjcmVhdGlv\nbiB0byBtYWtlIGl0IGVhc3kgdG8gcGFyZW50IG90aGVyIG9iamVjdHMgYXBw\ncm9wcmlhdGVseSwKCS8vIG90aGVyd2lzZSB0aGlzIGdldHMgY2FsbGVkIG9u\nIGRlbWFuZCBhdCBydW50aW1lLiBSZW1haW5pbmcgaW5pdGlhbGl6YXRpb24g\naXMKCS8vIHBlcmZvcm1lZCBhdCBzdGFydHVwLCBvbmNlIHRoZSBobWQgaGFz\nIGJlZW4gaWRlbnRpZmllZC4KCXB1YmxpYyB2b2lkIEV4cGFuZCgpCgl7CgkJ\ndmFyIF9vcmlnaW4gPSB0cmFuc2Zvcm0ucGFyZW50OwoJCWlmIChfb3JpZ2lu\nID09IG51bGwpCgkJewoJCQlfb3JpZ2luID0gbmV3IEdhbWVPYmplY3QobmFt\nZSArIG9yaWdpblN1ZmZpeCkudHJhbnNmb3JtOwoJCQlfb3JpZ2luLmxvY2Fs\nUG9zaXRpb24gPSB0cmFuc2Zvcm0ubG9jYWxQb3NpdGlvbjsKCQkJX29yaWdp\nbi5sb2NhbFJvdGF0aW9uID0gdHJhbnNmb3JtLmxvY2FsUm90YXRpb247CgkJ\nCV9vcmlnaW4ubG9jYWxTY2FsZSA9IHRyYW5zZm9ybS5sb2NhbFNjYWxlOwoJ\nCX0KCgkJaWYgKGhlYWQgPT0gbnVsbCkKCQl7CgkJCV9oZWFkID0gbmV3IEdh\nbWVPYmplY3QobmFtZSArIGhlYWRTdWZmaXgsIHR5cGVvZihTdGVhbVZSX1Ry\nYWNrZWRPYmplY3QpKS50cmFuc2Zvcm07CgkJCWhlYWQucGFyZW50ID0gX29y\naWdpbjsKCQkJaGVhZC5wb3NpdGlvbiA9IHRyYW5zZm9ybS5wb3NpdGlvbjsK\nCQkJaGVhZC5yb3RhdGlvbiA9IHRyYW5zZm9ybS5yb3RhdGlvbjsKCQkJaGVh\nZC5sb2NhbFNjYWxlID0gVmVjdG9yMy5vbmU7CgkJCWhlYWQudGFnID0gdGFn\nOwoJCX0KCgkJaWYgKHRyYW5zZm9ybS5wYXJlbnQgIT0gaGVhZCkKCQl7CgkJ\nCXRyYW5zZm9ybS5wYXJlbnQgPSBoZWFkOwoJCQl0cmFuc2Zvcm0ubG9jYWxQ\nb3NpdGlvbiA9IFZlY3RvcjMuemVybzsKCQkJdHJhbnNmb3JtLmxvY2FsUm90\nYXRpb24gPSBRdWF0ZXJuaW9uLmlkZW50aXR5OwoJCQl0cmFuc2Zvcm0ubG9j\nYWxTY2FsZSA9IFZlY3RvcjMub25lOwoKCQkJd2hpbGUgKHRyYW5zZm9ybS5j\naGlsZENvdW50ID4gMCkKCQkJCXRyYW5zZm9ybS5HZXRDaGlsZCgwKS5wYXJl\nbnQgPSBoZWFkOwojaWYgIVVOSVRZXzIwMTdfMl9PUl9ORVdFUgoJCQl2YXIg\nZ3VpTGF5ZXIgPSBHZXRDb21wb25lbnQ8R1VJTGF5ZXI+KCk7CgkJCWlmIChn\ndWlMYXllciAhPSBudWxsKQoJCQl7CgkJCQlEZXN0cm95SW1tZWRpYXRlKGd1\naUxheWVyKTsKCQkJCWhlYWQuZ2FtZU9iamVjdC5BZGRDb21wb25lbnQ8R1VJ\nTGF5ZXI+KCk7CgkJCX0KI2VuZGlmCgkJCXZhciBhdWRpb0xpc3RlbmVyID0g\nR2V0Q29tcG9uZW50PEF1ZGlvTGlzdGVuZXI+KCk7CgkJCWlmIChhdWRpb0xp\nc3RlbmVyICE9IG51bGwpCgkJCXsKCQkJCURlc3Ryb3lJbW1lZGlhdGUoYXVk\naW9MaXN0ZW5lcik7CgkJCQlfZWFycyA9IG5ldyBHYW1lT2JqZWN0KG5hbWUg\nKyBlYXJzU3VmZml4LCB0eXBlb2YoU3RlYW1WUl9FYXJzKSkudHJhbnNmb3Jt\nOwoJCQkJZWFycy5wYXJlbnQgPSBfaGVhZDsKCQkJCWVhcnMubG9jYWxQb3Np\ndGlvbiA9IFZlY3RvcjMuemVybzsKCQkJCWVhcnMubG9jYWxSb3RhdGlvbiA9\nIFF1YXRlcm5pb24uaWRlbnRpdHk7CgkJCQllYXJzLmxvY2FsU2NhbGUgPSBW\nZWN0b3IzLm9uZTsKCQkJfQoJCX0KCgkJaWYgKCFuYW1lLkVuZHNXaXRoKGV5\nZVN1ZmZpeCkpCgkJCW5hbWUgKz0gZXllU3VmZml4OwoJfQoKCXB1YmxpYyB2\nb2lkIENvbGxhcHNlKCkKCXsKCQl0cmFuc2Zvcm0ucGFyZW50ID0gbnVsbDsK\nCgkJLy8gTW92ZSBjaGlsZHJlbiBhbmQgY29tcG9uZW50cyBmcm9tIGhlYWQg\nYmFjayB0byBjYW1lcmEuCgkJd2hpbGUgKGhlYWQuY2hpbGRDb3VudCA+IDAp\nCgkJCWhlYWQuR2V0Q2hpbGQoMCkucGFyZW50ID0gdHJhbnNmb3JtOwojaWYg\nIVVOSVRZXzIwMTdfMl9PUl9ORVdFUgoJCXZhciBndWlMYXllciA9IGhlYWQu\nR2V0Q29tcG9uZW50PEdVSUxheWVyPigpOwoJCWlmIChndWlMYXllciAhPSBu\ndWxsKQoJCXsKCQkJRGVzdHJveUltbWVkaWF0ZShndWlMYXllcik7CgkJCWdh\nbWVPYmplY3QuQWRkQ29tcG9uZW50PEdVSUxheWVyPigpOwoJCX0KI2VuZGlm\nCgkJaWYgKGVhcnMgIT0gbnVsbCkKCQl7CgkJCXdoaWxlIChlYXJzLmNoaWxk\nQ291bnQgPiAwKQoJCQkJZWFycy5HZXRDaGlsZCgwKS5wYXJlbnQgPSB0cmFu\nc2Zvcm07CgoJCQlEZXN0cm95SW1tZWRpYXRlKGVhcnMuZ2FtZU9iamVjdCk7\nCgkJCV9lYXJzID0gbnVsbDsKCgkJCWdhbWVPYmplY3QuQWRkQ29tcG9uZW50\nKHR5cGVvZihBdWRpb0xpc3RlbmVyKSk7CgkJfQoKCQlpZiAob3JpZ2luICE9\nIG51bGwpCgkJewoJCQkvLyBJZiB3ZSBjcmVhdGVkIHRoZSBvcmlnaW4gb3Jp\nZ2luYWxseSwgZGVzdHJveSBpdCBub3cuCgkJCWlmIChvcmlnaW4ubmFtZS5F\nbmRzV2l0aChvcmlnaW5TdWZmaXgpKQoJCQl7CgkJCQkvLyBSZXBhcmVudCBh\nbnkgY2hpbGRyZW4gc28gd2UgZG9uJ3QgYWNjaWRlbnRhbGx5IGRlbGV0ZSB0\naGVtLgoJCQkJdmFyIF9vcmlnaW4gPSBvcmlnaW47CgkJCQl3aGlsZSAoX29y\naWdpbi5jaGlsZENvdW50ID4gMCkKCQkJCQlfb3JpZ2luLkdldENoaWxkKDAp\nLnBhcmVudCA9IF9vcmlnaW4ucGFyZW50OwoKCQkJCURlc3Ryb3lJbW1lZGlh\ndGUoX29yaWdpbi5nYW1lT2JqZWN0KTsKCQkJfQoJCQllbHNlCgkJCXsKCQkJ\nCXRyYW5zZm9ybS5wYXJlbnQgPSBvcmlnaW47CgkJCX0KCQl9CgoJCURlc3Ry\nb3lJbW1lZGlhdGUoaGVhZC5nYW1lT2JqZWN0KTsKCQlfaGVhZCA9IG51bGw7\nCgoJCWlmIChuYW1lLkVuZHNXaXRoKGV5ZVN1ZmZpeCkpCgkJCW5hbWUgPSBu\nYW1lLlN1YnN0cmluZygwLCBuYW1lLkxlbmd0aCAtIGV5ZVN1ZmZpeC5MZW5n\ndGgpOwoJfQoKCSNlbmRyZWdpb24KfQoK\n",
    "encoding": "base64",
    "_links": {
        "self": "https://api.github.com/repos/ValveSoftware/steamvr_unity_plugin/contents/Assets/SteamVR/Scripts/SteamVR_Camera.cs?ref=master",
        "git": "https://api.github.com/repos/ValveSoftware/steamvr_unity_plugin/git/blobs/5f14741d8a2fc91ac2fb214a0deb9bdb55887fa1",
        "html": "https://github.com/ValveSoftware/steamvr_unity_plugin/blob/master/Assets/SteamVR/Scripts/SteamVR_Camera.cs"
    }
}

Requisição Download
https://raw.githubusercontent.com/ValveSoftware/steamvr_unity_plugin/master/Assets/SteamVR/Scripts/SteamVR_Camera.cs


//======= Copyright (c) Valve Corporation, All rights reserved. ===============
//
// Purpose: Adds SteamVR render support to existing camera objects
//
//=============================================================================

using UnityEngine;
using System.Collections;
using System.Reflection;
using Valve.VR;

[RequireComponent(typeof(Camera))]
public class SteamVR_Camera : MonoBehaviour
{
	[SerializeField]
	private Transform _head;
	public Transform head { get { return _head; } }
	public Transform offset { get { return _head; } } // legacy
	public Transform origin { get { return _head.parent; } }

	public new Camera camera { get; private set; }

	[SerializeField]
	private Transform _ears;
	public Transform ears { get { return _ears; } }

	public Ray GetRay()
	{
		return new Ray(_head.position, _head.forward);
	}

	public bool wireframe = false;

	static public float sceneResolutionScale
	{
		get { return UnityEngine.VR.VRSettings.renderScale; }
		set { UnityEngine.VR.VRSettings.renderScale = value; }
	}

	#region Enable / Disable

	void OnDisable()
	{
		SteamVR_Render.Remove(this);
	}

	void OnEnable()
	{
		// Bail if no hmd is connected
		var vr = SteamVR.instance;
		if (vr == null)
		{
			if (head != null)
			{
				head.GetComponent<SteamVR_TrackedObject>().enabled = false;
			}

			enabled = false;
			return;
		}

		// Convert camera rig for native OpenVR integration.
		var t = transform;
		if (head != t)
		{
			Expand();

			t.parent = origin;

			while (head.childCount > 0)
				head.GetChild(0).parent = t;

			// Keep the head around, but parent to the camera now since it moves with the hmd
			// but existing content may still have references to this object.
			head.parent = t;
			head.localPosition = Vector3.zero;
			head.localRotation = Quaternion.identity;
			head.localScale = Vector3.one;
			head.gameObject.SetActive(false);

			_head = t;
		}

		if (ears == null)
		{
			var e = transform.GetComponentInChildren<SteamVR_Ears>();
			if (e != null)
				_ears = e.transform;
        }

		if (ears != null)
			ears.GetComponent<SteamVR_Ears>().vrcam = this;

		SteamVR_Render.Add(this);
	}

	#endregion

	#region Functionality to ensure SteamVR_Camera component is always the last component on an object

	void Awake()
	{
		camera = GetComponent<Camera>(); // cached to avoid runtime lookup
		ForceLast();
    }

	static Hashtable values;

	public void ForceLast()
	{
		if (values != null)
		{
			// Restore values on new instance
			foreach (DictionaryEntry entry in values)
			{
				var f = entry.Key as FieldInfo;
				f.SetValue(this, entry.Value);
			}
			values = null;
		}
		else
		{
			// Make sure it's the last component
			var components = GetComponents<Component>();

			// But first make sure there aren't any other SteamVR_Cameras on this object.
			for (int i = 0; i < components.Length; i++)
			{
				var c = components[i] as SteamVR_Camera;
				if (c != null && c != this)
				{
					DestroyImmediate(c);
				}
			}

			components = GetComponents<Component>();

			if (this != components[components.Length - 1])
			{
				// Store off values to be restored on new instance
				values = new Hashtable();
				var fields = GetType().GetFields(BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public);
				foreach (var f in fields)
					if (f.IsPublic || f.IsDefined(typeof(SerializeField), true))
						values[f] = f.GetValue(this);

				var go = gameObject;
				DestroyImmediate(this);
				go.AddComponent<SteamVR_Camera>().ForceLast();
			}
		}
	}

	#endregion

	#region Expand / Collapse object hierarchy

#if UNITY_EDITOR
	public bool isExpanded { get { return head != null && transform.parent == head; } }
#endif
	const string eyeSuffix = " (eye)";
	const string earsSuffix = " (ears)";
	const string headSuffix = " (head)";
	const string originSuffix = " (origin)";
	public string baseName { get { return name.EndsWith(eyeSuffix) ? name.Substring(0, name.Length - eyeSuffix.Length) : name; } }

	// Object hierarchy creation to make it easy to parent other objects appropriately,
	// otherwise this gets called on demand at runtime. Remaining initialization is
	// performed at startup, once the hmd has been identified.
	public void Expand()
	{
		var _origin = transform.parent;
		if (_origin == null)
		{
			_origin = new GameObject(name + originSuffix).transform;
			_origin.localPosition = transform.localPosition;
			_origin.localRotation = transform.localRotation;
			_origin.localScale = transform.localScale;
		}

		if (head == null)
		{
			_head = new GameObject(name + headSuffix, typeof(SteamVR_TrackedObject)).transform;
			head.parent = _origin;
			head.position = transform.position;
			head.rotation = transform.rotation;
			head.localScale = Vector3.one;
			head.tag = tag;
		}

		if (transform.parent != head)
		{
			transform.parent = head;
			transform.localPosition = Vector3.zero;
			transform.localRotation = Quaternion.identity;
			transform.localScale = Vector3.one;

			while (transform.childCount > 0)
				transform.GetChild(0).parent = head;
#if !UNITY_2017_2_OR_NEWER
			var guiLayer = GetComponent<GUILayer>();
			if (guiLayer != null)
			{
				DestroyImmediate(guiLayer);
				head.gameObject.AddComponent<GUILayer>();
			}
#endif
			var audioListener = GetComponent<AudioListener>();
			if (audioListener != null)
			{
				DestroyImmediate(audioListener);
				_ears = new GameObject(name + earsSuffix, typeof(SteamVR_Ears)).transform;
				ears.parent = _head;
				ears.localPosition = Vector3.zero;
				ears.localRotation = Quaternion.identity;
				ears.localScale = Vector3.one;
			}
		}

		if (!name.EndsWith(eyeSuffix))
			name += eyeSuffix;
	}

	public void Collapse()
	{
		transform.parent = null;

		// Move children and components from head back to camera.
		while (head.childCount > 0)
			head.GetChild(0).parent = transform;
#if !UNITY_2017_2_OR_NEWER
		var guiLayer = head.GetComponent<GUILayer>();
		if (guiLayer != null)
		{
			DestroyImmediate(guiLayer);
			gameObject.AddComponent<GUILayer>();
		}
#endif
		if (ears != null)
		{
			while (ears.childCount > 0)
				ears.GetChild(0).parent = transform;

			DestroyImmediate(ears.gameObject);
			_ears = null;

			gameObject.AddComponent(typeof(AudioListener));
		}

		if (origin != null)
		{
			// If we created the origin originally, destroy it now.
			if (origin.name.EndsWith(originSuffix))
			{
				// Reparent any children so we don't accidentally delete them.
				var _origin = origin;
				while (_origin.childCount > 0)
					_origin.GetChild(0).parent = _origin.parent;

				DestroyImmediate(_origin.gameObject);
			}
			else
			{
				transform.parent = origin;
			}
		}

		DestroyImmediate(head.gameObject);
		_head = null;

		if (name.EndsWith(eyeSuffix))
			name = name.Substring(0, name.Length - eyeSuffix.Length);
	}

	#endregion
}